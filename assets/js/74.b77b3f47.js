(window.webpackJsonp=window.webpackJsonp||[]).push([[74],{390:function(t,s,e){"use strict";e.r(s);var a=e(2),n=Object(a.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h2",{attrs:{id:"前言"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[t._v("#")]),t._v(" 前言")]),t._v(" "),e("p",[t._v("熟练使用Git是一个合格程序员的基本素养, 本文列举了常用的Git命令以及工作流, 如果你有更好的建议, 欢迎评论.")]),t._v(" "),e("h2",{attrs:{id:"更改默认编辑器"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#更改默认编辑器"}},[t._v("#")]),t._v(" 更改默认编辑器")]),t._v(" "),e("p",[t._v("对于不熟悉 vim 编辑器的朋友(比如我),最好的办法是将 git 默认的编辑器改为 VSCode(或者自己熟悉的编辑器).具体方法如下")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("打开 VSCode")])]),t._v(" "),e("li",[e("p",[t._v("打开控制面板(command[ctrl) + shift + p]，输入"),e("code",[t._v("shell command Install 'code' command in PATH command")]),t._v(", 成功后会出现"),e("code",[t._v("Shell command 'code' successfully installed in PATH.")]),t._v("提示")])]),t._v(" "),e("li",[e("p",[t._v("打开命令行， 输入 "),e("code",[t._v('git config --global core.editor "code --wait"')])]),t._v(" "),e("p",[t._v("在用到rebase等命令的时候比较好用")])])]),t._v(" "),e("h2",{attrs:{id:"fetch与pull"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fetch与pull"}},[t._v("#")]),t._v(" fetch与pull")]),t._v(" "),e("p",[t._v("一言以蔽之： "),e("code",[t._v("git pull")]),t._v(" = "),e("code",[t._v("git Fetch")]),t._v(" + "),e("code",[t._v("git Merge")])]),t._v(" "),e("p",[e("code",[t._v("git fetch")]),t._v(" 把他人的分支更新拉取了过来，fetch 之后会产生 unstaged 的文件, 可以类比你本地进行了修改")]),t._v(" "),e("p",[e("code",[t._v("git pull")]),t._v(" 在"),e("code",[t._v("git fetch")]),t._v("的基础上进行了"),e("code",[t._v("git merge")]),t._v("操作, 保留了其他人的 commit 信息的同事产生一个新的 commitID")]),t._v(" "),e("p",[t._v("频繁进行"),e("code",[t._v("git fetch")]),t._v("的好处：频繁的获取不会减少将来合并的复杂性，或者减少冲突的可能性，仅仅是让你知道原生分支发生了什么")]),t._v(" "),e("h2",{attrs:{id:"git-rebase"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-rebase"}},[t._v("#")]),t._v(" git rebase")]),t._v(" "),e("h3",{attrs:{id:"工作流"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#工作流"}},[t._v("#")]),t._v(" 工作流")]),t._v(" "),e("p",[t._v("比如我们在 feat-x 进行开发，突然有一个紧急的 bug 需要修复，我们需要新开一个 hotfix-x 进行开发，此时我们有两个选择，一是使用 "),e("code",[t._v("git stash")]),t._v(", 二是使用 commit 进行提交，修复完成之后 checkout 回我们的 Feature 分支进行开发，开发完成后使用"),e("code",[t._v("git rebase -i")]),t._v("来合并 commit")]),t._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("// 在feat-x开发, 已经进行了提交\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout -b feat-x\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"finish step1"')]),t._v("\n\n//此时bug来了\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"temp commit"')]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout master "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" pull\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout -b hotfix-x\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"fix: xxx"')]),t._v("\n\n// 修完之后origin/master分支可能已经进行了更新, 因此将origin/master, hotfix-x同步\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" pull -r origin master"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("相当于git fetch origin + "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" rebase origin master"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push -u origin hotfix-x\n\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout feat-x\n// 处理feat-x, 完成step2\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"finish step2"')]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" rebase -i HEAD~2 // 将"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"temp commit"')]),t._v("和"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"finish step 2"')]),t._v("合并\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" pull -r origin master\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push \n\n// 远程merge之后\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout master\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" pull // master分支上不会出现多余的merge commit\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br"),e("span",{staticClass:"line-number"},[t._v("22")]),e("br"),e("span",{staticClass:"line-number"},[t._v("23")]),e("br"),e("span",{staticClass:"line-number"},[t._v("24")]),e("br"),e("span",{staticClass:"line-number"},[t._v("25")]),e("br"),e("span",{staticClass:"line-number"},[t._v("26")]),e("br")])]),e("p",[t._v("其中i 表示 interactive, 以交互的形式打开界面，HEAD~2 表示最近的两次提交，会弹出下列输入框")]),t._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("pick cdcvcb8 finish step2\npick cf22cb8 temp commit\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Rebase a744522..d74653a onto a744522 (2 commands)")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Commands:")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# p, pick <commit> = 选择本次commit")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# r, reword <commit> = 选择该commit,但是需要重新编辑commit信息")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# e, edit <commit> = 使用该commit，但是等待编辑")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# s, squash <commit> = 使用该commit,但是与先前的commit进行合并")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# f, fixup <commit> = 使用该commit,但是丢弃本次commit的log信息")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# x, exec <command> = 使用shell执行剩余行的命令")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# b, break = 在此停止，可以使用git rebase --continue 命名继续")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# d, drop <commit> = 移除commit信息")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# l, label <label> = 为当前的HEAD添加标签名")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# t, reset <label> = 重新设置HEAD为某个标签")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# m, merge [-C <commit> | -c <commit>] <label> [# <oneline>]")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# .       create a merge commit using the original merge commit's")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# .       message (or the oneline, if no original merge commit was")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# .       specified). Use -c <commit> to reword the commit message.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# These lines can be re-ordered; they are executed from top to bottom.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# If you remove a line here THAT COMMIT WILL BE LOST.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# However, if you remove everything, the rebase will be aborted.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Note that empty commits are commented out")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br"),e("span",{staticClass:"line-number"},[t._v("22")]),e("br"),e("span",{staticClass:"line-number"},[t._v("23")]),e("br"),e("span",{staticClass:"line-number"},[t._v("24")]),e("br"),e("span",{staticClass:"line-number"},[t._v("25")]),e("br"),e("span",{staticClass:"line-number"},[t._v("26")]),e("br"),e("span",{staticClass:"line-number"},[t._v("27")]),e("br"),e("span",{staticClass:"line-number"},[t._v("28")]),e("br")])]),e("p",[t._v("保留step2的commit")]),t._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("pick cdcvcb8 finish step2\nsquash cf22cb8 temp commit\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br")])]),e("p",[t._v("合并临时commit还可以使用"),e("code",[t._v("git reset --soft")]),t._v(", 上面的例子可以这么处理")]),t._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("git reset --soft HEAD~2\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("h3",{attrs:{id:"冲突处理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#冲突处理"}},[t._v("#")]),t._v(" 冲突处理")]),t._v(" "),e("p",[t._v("如果发生冲突了会提示，手动解决冲突之后, 最后用"),e("code",[t._v("git rebase --continue")]),t._v("继续没完成的合并")]),t._v(" "),e("h3",{attrs:{id:"rebase-黄金法则"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#rebase-黄金法则"}},[t._v("#")]),t._v(" rebase 黄金法则")]),t._v(" "),e("p",[e("strong",[t._v("不要在与他人合作的分支上进行操作")]),t._v(",包括以下几点：")]),t._v(" "),e("ul",[e("li",[t._v("不要 rebase master 分支")]),t._v(" "),e("li",[t._v("对于多人合作开发的 feature 分支，也不要进行 rebase,最好的方法是在此分支上开辟临时分支进行操作")]),t._v(" "),e("li",[t._v("避免在进行 Pull Request 之后的分支使用 rebase 操作")])]),t._v(" "),e("p",[t._v("更多关于rebase的讨论请看"),e("a",{attrs:{href:"https://www.zhihu.com/question/61283395",target:"_blank",rel:"noopener noreferrer"}},[t._v("这里"),e("OutboundLink")],1)]),t._v(" "),e("h2",{attrs:{id:"git-tag"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-tag"}},[t._v("#")]),t._v(" git tag")]),t._v(" "),e("p",[t._v("Git tag命令很简单, 稍微复杂的是版本管理")]),t._v(" "),e("h3",{attrs:{id:"版本管理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#版本管理"}},[t._v("#")]),t._v(" 版本管理")]),t._v(" "),e("h3",{attrs:{id:"changelog"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#changelog"}},[t._v("#")]),t._v(" changeLog")]),t._v(" "),e("h2",{attrs:{id:"git-commit-amend"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-commit-amend"}},[t._v("#")]),t._v(" git commit --amend")]),t._v(" "),e("p",[t._v("当发现 commit 信息写得有误(如单词拼错)的时候，可以使用该命令进行修改。")]),t._v(" "),e("h2",{attrs:{id:"git-reset"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-reset"}},[t._v("#")]),t._v(" git reset")]),t._v(" "),e("p",[t._v("当对修改进行了 commit 之后，想要抛弃此 commit, 可以用"),e("code",[t._v("git reset --hard commitID")]),t._v("命名来回退到该 commitID 的状态记录，注意的是此时更改丢失，若想保留更改可以使用"),e("code",[t._v("git reset --soft commitID")]),t._v(", 修改的文件会变为 unstaged 状态。")]),t._v(" "),e("h2",{attrs:{id:"git-stash"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-stash"}},[t._v("#")]),t._v(" git stash")]),t._v(" "),e("p",[t._v("当需要切换分支，但是又不想进行提交的时候，比如和另外一个开发者在同一个 feature-x 上进行开发，不方便使用 rebase，此时可以用"),e("code",[t._v("git stash")]),t._v("将更改暂存起来。切换回来的时候再使用"),e("code",[t._v("git pop")]),t._v("将修改进行恢复。")]),t._v(" "),e("h2",{attrs:{id:"git-alias"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-alias"}},[t._v("#")]),t._v(" git alias")]),t._v(" "),e("h2",{attrs:{id:"参考"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[t._v("#")]),t._v(" 参考")]),t._v(" "),e("p",[e("a",{attrs:{href:"http://git-scm.com/book/zh/v2",target:"_blank",rel:"noopener noreferrer"}},[t._v("ProGit"),e("OutboundLink")],1)]),t._v(" "),e("p",[e("a",{attrs:{href:"https://gist.github.com/jedmao/5053440",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://gist.github.com/jedmao/5053440"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("http://jartto.wang/2018/12/11/git-rebase/")]),t._v(" "),e("p",[t._v("https://www.liaoxuefeng.com/wiki/896043488029600/1216289527823648")]),t._v(" "),e("p",[t._v("https://stackoverflow.com/questions/44906548/git-rebase-local-vs-git-pull-rebase-origin")]),t._v(" "),e("p",[t._v("https://stackoverflow.com/questions/2472254/when-should-i-use-git-pull-rebase")])])}),[],!1,null,null,null);s.default=n.exports}}]);